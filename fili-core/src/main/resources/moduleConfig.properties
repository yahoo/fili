# Copyright 2016 Yahoo Inc.
# Licensed under the terms of the Apache license. Please see LICENSE.md file distributed with this work for terms.

#The name of this module (required)
moduleName = fili-core

# Resource binder is critical to starting the app
bard__resource_binder = [SET ME IN APPLICATION CONFIG]

# Redis configuration
bard__redis_host = localhost
bard__redis_port = 6379
# timeout of 5 seconds (in milliseconds)
bard__redis_timeout_ms = 5000
# namespace all of the keys stored in Redis, only necessary if you wish to support asynchronous queries
bard__redis_namespace = [SET ME IN APPLICATION CONFIG]

# The channel on which RedisBroadcastChannel can publish/listen to messages, only necessary if you wish to support
# asynchronous queries
bard__redisbroadcastchannel_name = preResponse_notification_channel

# Rate Limiting -- Tuned for current cluster limits.  Increase after new hardware available
bard__request_limit_global = 70
bard__request_limit_per_user = 2
bard__request_limit_ui = 52

# setting for druid query weight limit
bard__query_weight_limit = 100000

# Default the timeout to 10 minutes, in milliseconds
bard__druid_request_timeout = 600000

# Druid segments loaded in recent 5 mins are considered to be fresh
bard__fresh_segment_period = 300000

# Default number of threads (pool size) available for scheduling loaders
bard__loader_scheduler_thread_pool_size = 4

# Druid segment metadata loader scheduled to run every one minute
bard__druid_seg_loader_timer_duration = 60000
bard__druid_dim_loader_timer_duration = 60000

# Druid segment metadata loader health check last run duration - every 2 minutes
bard__seg_loader_health_check_last_run_duration = 120000

# Partial data feature flag
bard__partial_data_enabled = true

# MemCached configuration
bard__memcached_servers = localhost:11211
bard__memcached_expiration_seconds = 3600

# Maximum Druid response size to cache, in bytes. Defaults to MAX_LONG (9223372036854775807)
# If using memcached, make sure this aligns with the setting memcached is using, overridden with it's -I parameter
bard__druid_max_response_length_to_cache = 9223372036854775807

# Data Cache strategy, whose value is one of the following
# 1. ETag
#    This is the same thing as LocalSignature except that Etag optimizes to avoid the possibility of cache out-of-sync
#    problem. ETag relies on Druid to generate the signature(hash) instead of Fili
# 2. LocalSignature (cache V2, deprecated)
#    Maintains a mapping of (query, druidSegmentHash) -> DruidResponse. When a query comes in, Fili finds and computes
#    hash of all segments involved in that query. The query itself and the segment hash are combined together as the
#    cache key. If it's a new query or Druid reprocessed so that the segments change, there won't be a cache key in the
#    mapping and Fili talks to Druid to get new result. There is a possibility of cache out-of-sync problem when Druid
#    reprocesses and the segment scanner updates
# 3. Ttl (cache V1, deprecated)
#    "Ttl" stands for "Time to live". This strategy does NOT account for reprocessing. If you run a query, a cache is
#    generated with a TTL period. Until the cache entry expires(TTL > 0), same result will be sent back on the same
#    query; this is the case even when Druid has updated its data(result). Client using this cache strategy can
#    potentially receive stale results until the cache entry for that query expires.
# 4. NoCache
druid__query_response_caching_strategy = LocalSignature

# Whether partial data or volatile data should be cached or not
bard__cache_partial_data = false

# Lucene index files path
bard__lucene_index_path = [SET ME IN APPLICATION CONFIG]

# Lucene search timeout in milliseconds
bard__lucene_search_timeout_ms = 600000

# Maximum number of druid filters in a Fili-generated Druid query
bard__max_num_druid_filters = 10000

# setting for maximum allowed results without any filters - used for /dim/values endpoint
bard__max_results_without_filters = 10000

# Default number of records per-page. This applies ONLY to the dimensions endpoint. The data endpoint does not
# perform pagination by default.
bard__default_per_page = 10000

# URLs for druid nodes
# bard__druid_broker = [SET ME IN APPLICATION CONFIG]
# bard__druid_coord = [SET ME IN APPLICATION CONFIG]

# Flag to enable usage of metadata supplied by the druid coordinator
# It requires coordinator URL to be set (see setting druid_coord)
bard__druid_coordinator_metadata_enabled = true

# Disabling the druid dimension loader by default
# When set to true you will also need to populate the list of dimensions using druid_dim_loader_dimensions
bard__druid_dimensions_loader_enabled = false
bard__druid_dim_loader_row_limit = 1000
#bard__druid_dim_loader_dimensions = dim1,dim2,dim3

# TopN capability
bard__top_n_enabled = false

# Whether or not 'startsWith' and 'contains' filter operations are allowed in data queries
bard__data_filter_substring_operations_enabled = true

# Timezone used. Sets timezone in Joda Time and granularity. Change requires webservice restart
bard__timezone = UTC

# Default epoch for interval period alignment
bard__alignment_epoch = 1970-01-01T00:00:00Z
#bard__output_datetime_format = yyyy-MM-dd' 'HH:mm:ss.SSS

# Intersection reporting capability. Incubating Feature
bard__intersection_reporting_enabled = false

# Flag to turn on the updated (and more accurate) collection keys for metadata JSON responses
bard__updated_metadata_collection_names_enabled = false

# Statically define the order of LogInfo parts in the RequestLog mega log line. If not set, the order matches the
# insertion order of the parts. Each part is represented by the simple name of its java class. This setting does not
# change the predefined order of Durations, Threads, Preface at the start and of Epilogue at the end of the log line.
# bard__requestlog_loginfo_order = BardQueryInfo,DataRequest,DimensionRequest,MetricRequest,SliceRequest,TableRequest,FeatureFlagRequest,DruidResponse

# List of allowed user roles, must provide value if uncommented
# bard__user_roles=

# Default wait to use when no asyncAfter parameter is specified. It can be the String 'never' (all requests are
#synchronous), the String 'always' (all requests are asynchronous) or a time duration in milliseconds.
# The asyncAfter parameter describes how long users should wait before a synchronous request becomes asynchronous.
# Async should be `never` unless a job store has been set up.
# Bard default is never.
bard__default_asyncAfter=never

# Flag to turn on case sensitive keys in keyvalue store
bard__case_sensitive_keys_enabled = false

# Sets the upper limit of the number of Druid uncovered interval. Default is 0, which means
# no uncovered interval is allowed
bard__druid_uncovered_interval_limit = 0

# The implementation of the com.yahoo.bard.webservice.logging.LogFormatter to use to format the RequestLog logging
# blocks. By default, the RequestLog is formatted as JSON.
bard__log_formatter_implementation=com.yahoo.bard.webservice.logging.JsonLogFormatter

# Druid
# A comma separated list of configured lookup tiers. See http://druid.io/docs/latest/querying/lookups.html
# The default is a list of 1 tier called "__default"
# If you have multiple tiers, write them like "tier1,tier2,tier3"
bard__druid_registered_lookup_tiers=__default

# If this flag is set to true, InFilter will be used as the default filter. Else OrFilter will be used as the default filter.
bard__default_in_filter_enabled=false

# Truncate max filename length before suffix
# -1 indicates no truncation, 215 currently supports limits of Excel in MacOS
bard__download_file_max_name_length=-1

# Enable specific ciphersuites for SSL client connections
#bard__org.asynchttpclient.AsyncHttpClientConfig.enabledCipherSuites=TLS_RSA_WITH_AES_256_CBC_SHA256,TLS_RSA_WITH_AES_128_CBC_SHA256
