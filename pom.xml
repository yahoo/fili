<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.yahoo.fili</groupId>
    <artifactId>fili-parent-pom</artifactId>
    <version>0.10-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>Fili: parent pom</name>
    <description>Shared dependencies for the Fili libraries</description>
    <url>https://github.com/yahoo/fili</url>

    <modules>
        <module>fili-system-config</module>
        <module>fili-core</module>
        <module>fili-navi</module>
        <module>fili-security</module>
        <module>fili</module>
        <module>fili-wikipedia-example</module>
        <module>fili-generic-example</module>
        <module>fili-sql</module>
    </modules>

    <organization>
        <name>Yahoo! Inc.</name>
        <url>http://www.yahoo.com/</url>
    </organization>

    <issueManagement>
        <system>GitHub Issues</system>
        <url>https://github.com/yahoo/fili/issues</url>
    </issueManagement>

    <inceptionYear>2016</inceptionYear>

    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <developers>
        <developer>
            <name>Yahoo Inc.</name>
            <url>https://github.com/yahoo</url>
        </developer>
    </developers>

    <distributionManagement>
        <site>
            <id>git</id>
            <url>scm:git:git@github.com:yahoo/fili.git</url>
        </site>
        <repository>
            <id>bintray-fili-repo</id>
            <url>https://api.bintray.com/maven/yahoo/maven/fili/;publish=1</url>
        </repository>
    </distributionManagement>

    <scm>
        <developerConnection>scm:git:ssh://git@github.com/yahoo/fili.git</developerConnection>
        <url>https://github.com/yahoo/fili.git</url>
        <tag>HEAD</tag>
    </scm>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>${project.build.sourceEncoding}</project.reporting.outputEncoding>

        <version.fili>0.10-SNAPSHOT</version.fili>

        <version.slf4j>1.7.25</version.slf4j>
        <version.servlet>3.1.0</version.servlet>
        <version.jersey>2.24</version.jersey>
        <version.hk2>2.5.0-b36</version.hk2>
        <version.metrics>3.2.2</version.metrics>
        <version.logback>1.2.3</version.logback>
        <version.lucene>6.6.0</version.lucene>
        <version.jackson>2.6.2</version.jackson>
        <version.groovy>2.4.5</version.groovy>
        <version.gmavenplus.plugin>1.6</version.gmavenplus.plugin>
        <version.guava>21.0</version.guava>
        <version.druid.api>0.3.8</version.druid.api>
        <profiles.active>test</profiles.active>

        <javadoc_options>${disableDocLint}</javadoc_options>
        <min_jdk_version>1.8</min_jdk_version>
        <max_jdk_version>1.9</max_jdk_version>
        <source_jdk_version>1.8</source_jdk_version>
        <target_jdk_version>1.8</target_jdk_version>

        <disableDocLint>-Xdoclint:none</disableDocLint>

        <min_maven_version>3.3.9</min_maven_version>
        <!-- TODO: Review these -->
        <maven.deploy.skip>${env.DO_NOT_PUBLISH}</maven.deploy.skip>
        <enforcer.skip>false</enforcer.skip>

        <checkstyle.skip>false</checkstyle.skip>
        <checkstyle.config.location>checkstyle-style.xml</checkstyle.config.location>
        <checkstyle.suppressions.location>checkstyle-suppressions.xml</checkstyle.suppressions.location>
        <checkstyle.version>8.5</checkstyle.version>
        <checkstyle.resourceIncludes>**/*.properties*</checkstyle.resourceIncludes>

        <dependency.locations.enabled>false</dependency.locations.enabled>
        <maven-javadoc-plugin-version>2.10.4</maven-javadoc-plugin-version>
        <maven-jar-plugin-version>3.0.2</maven-jar-plugin-version>
        <maven-compiler-plugin-version>3.6.0</maven-compiler-plugin-version>
        <maven-pmd-plugin-version>3.6</maven-pmd-plugin-version>
        <maven-source-plugin-version>3.0.1</maven-source-plugin-version>
        <maven-surefire-plugin.version>2.19.1</maven-surefire-plugin.version>
        <maven-site-plugin-version>3.6</maven-site-plugin-version>
        <maven-checkstyle-plugin-version>2.17</maven-checkstyle-plugin-version>
        <maven-project-info-reports-plugin-version>2.9</maven-project-info-reports-plugin-version>
        <maven-surefire-report-plugin.version>${maven-surefire-plugin.version}</maven-surefire-report-plugin.version>

        <testngUseDefaultListeners>false</testngUseDefaultListeners>
        <testngReporter>org.testng.reporters.FailedReporter,org.testng.reporters.XMLReporter,org.testng.reporters.JUnitXMLReporter</testngReporter>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- Local module dependencies -->
            <dependency>
                <groupId>com.yahoo.fili</groupId>
                <artifactId>fili-system-config</artifactId>
                <version>${version.fili}</version>
            </dependency>
            <dependency>
                <groupId>com.yahoo.fili</groupId>
                <artifactId>fili-core</artifactId>
                <version>${version.fili}</version>
            </dependency>
            <dependency>
                <groupId>com.yahoo.fili</groupId>
                <artifactId>fili</artifactId>
                <version>${version.fili}</version>
            </dependency>
            <dependency>
                <groupId>com.yahoo.fili</groupId>
                <artifactId>fili-core</artifactId>
                <version>${version.fili}</version>
                <type>test-jar</type>
                <scope>test</scope>
            </dependency>

            <!-- Logging -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${version.slf4j}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${version.logback}</version>
            </dependency>

            <!-- Validation -->
            <dependency>
                <groupId>javax.validation</groupId>
                <artifactId>validation-api</artifactId>
                <version>1.1.0.Final</version>
            </dependency>

            <!-- Apache Commons Libraries -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>3.5</version>
            </dependency>
            <dependency>
                <groupId>commons-configuration</groupId>
                <artifactId>commons-configuration</artifactId>
                <version>1.10</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-collections4</artifactId>
                <version>4.1</version>
            </dependency>

            <!-- Apache Avro Libraries -->
            <dependency>
                <groupId>org.apache.avro</groupId>
                <artifactId>avro</artifactId>
                <version>1.8.1</version>
            </dependency>

            <!-- All things Spring -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-core</artifactId>
                <version>4.3.4.RELEASE</version>
            </dependency>

            <!-- Test -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>4.12</version>
                <scope>test</scope>
            </dependency>

            <dependency><!-- Mandatory dependency for using Spock -->
                <groupId>org.spockframework</groupId>
                <artifactId>spock-core</artifactId>
                <version>1.0-groovy-2.4</version>
                <scope>test</scope>
            </dependency>

            <!-- Optional dependencies for using Spock -->
            <dependency> <!-- enables mocking of classes (in addition to interfaces) -->
                <groupId>cglib</groupId>
                <artifactId>cglib-nodep</artifactId>
                <version>3.2.4</version>
                <scope>test</scope>
            </dependency>
            <dependency> <!-- enables mocking of classes without default constructor (together with CGLIB) -->
                <groupId>org.objenesis</groupId>
                <artifactId>objenesis</artifactId>
                <version>2.4</version>
                <scope>test</scope>
            </dependency>
            <dependency> <!-- only necessary if Hamcrest matchers are used -->
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest-all</artifactId>
                <version>1.3</version>
                <scope>test</scope>
            </dependency>

            <!-- Metrics -->
            <dependency>
                <groupId>io.dropwizard.metrics</groupId>
                <artifactId>metrics-core</artifactId>
                <version>${version.metrics}</version>
            </dependency>
            <dependency>
                <groupId>io.dropwizard.metrics</groupId>
                <artifactId>metrics-annotation</artifactId>
                <version>${version.metrics}</version>
            </dependency>
            <dependency>
                <groupId>io.dropwizard.metrics</groupId>
                <artifactId>metrics-healthchecks</artifactId>
                <version>${version.metrics}</version>
            </dependency>
            <dependency>
                <groupId>io.dropwizard.metrics</groupId>
                <artifactId>metrics-servlets</artifactId>
                <version>${version.metrics}</version>
            </dependency>
            <dependency>
                <groupId>io.dropwizard.metrics</groupId>
                <artifactId>metrics-servlet</artifactId>
                <version>${version.metrics}</version>
            </dependency>
            <dependency>
                <groupId>io.dropwizard.metrics</groupId>
                <artifactId>metrics-jersey2</artifactId>
                <version>${version.metrics}</version>
            </dependency>
            <dependency>
                <groupId>io.dropwizard.metrics</groupId>
                <artifactId>metrics-logback</artifactId>
                <version>${version.metrics}</version>
                <exclusions>
                    <exclusion>
                        <groupId>ch.qos.logback</groupId>
                        <artifactId>logback-classic</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!-- Servlet API -->
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <version>${version.servlet}</version>
            </dependency>

            <!-- Jersey -->
            <dependency>
                <groupId>org.glassfish.jersey.core</groupId>
                <artifactId>jersey-common</artifactId>
                <version>${version.jersey}</version>
            </dependency>
            <dependency> <!-- metrics tries to load jersey-server 2.11 -->
                <groupId>org.glassfish.jersey.core</groupId>
                <artifactId>jersey-server</artifactId>
                <version>${version.jersey}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.containers</groupId>
                <artifactId>jersey-container-servlet</artifactId>
                <version>${version.jersey}</version>
            </dependency>
            <dependency><!-- Client for running local "integration-style" tests -->
                <groupId>org.glassfish.jersey.test-framework</groupId>
                <artifactId>jersey-test-framework-core</artifactId>
                <version>${version.jersey}</version>
                <scope>test</scope>
            </dependency>
            <dependency><!-- Container for running local "integration-style" tests -->
                <groupId>org.glassfish.jersey.test-framework.providers</groupId>
                <artifactId>jersey-test-framework-provider-grizzly2</artifactId>
                <version>${version.jersey}</version>
                <scope>test</scope>
            </dependency>

            <!-- Injection -->
            <dependency>
                <groupId>javax.annotation</groupId>
                <artifactId>javax.annotation-api</artifactId>
                <version>1.3</version>
            </dependency>
            <dependency>
                <groupId>javax.inject</groupId>
                <artifactId>javax.inject</artifactId>
                <version>1</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.hk2</groupId>
                <artifactId>hk2-api</artifactId>
                <version>${version.hk2}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.hk2.external</groupId>
                <artifactId>javax.inject</artifactId>
                <version>${version.hk2}</version>
            </dependency>

            <!-- Druid -->
            <dependency>
                <groupId>io.druid</groupId>
                <artifactId>druid-api</artifactId>
                <version>${version.druid.api}</version>
            </dependency>

            <!-- Json Parsing -->
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-core</artifactId>
                <version>${version.jackson}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${version.jackson}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.module</groupId>
                <artifactId>jackson-module-afterburner</artifactId>
                <version>${version.jackson}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>${version.jackson}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-jdk8</artifactId>
                <version>${version.jackson}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-joda</artifactId>
                <version>${version.jackson}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.dataformat</groupId>
                <artifactId>jackson-dataformat-csv</artifactId>
                <version>${version.jackson}</version>
            </dependency>

            <!-- Redis -->
            <dependency>
                <!-- TODO: Move to only redison dependency -->
                <groupId>redis.clients</groupId>
                <artifactId>jedis</artifactId>
                <version>2.9.0</version>
            </dependency>
            <dependency>
                <groupId>org.redisson</groupId>
                <artifactId>redisson</artifactId>
                <version>3.1.0</version>
            </dependency>

            <!-- JodaTime -->
            <dependency>
                <groupId>joda-time</groupId>
                <artifactId>joda-time</artifactId>
                <version>2.9.6</version>
            </dependency>

            <!-- HTTP Client -->
            <dependency>
                <groupId>org.asynchttpclient</groupId>
                <artifactId>async-http-client</artifactId>
                <version>2.0.24</version>
            </dependency>

            <!-- ReactiveX -->
            <dependency>
                <groupId>io.reactivex</groupId>
                <artifactId>rxjava</artifactId>
                <version>1.2.2</version>
            </dependency>

            <!-- Memcached -->
            <dependency>
                <!-- TODO: Move to async memcached client -->
                <groupId>net.spy</groupId>
                <artifactId>spymemcached</artifactId>
                <version>2.12.1</version>
            </dependency>

            <!-- Lucene -->
            <dependency>
                <groupId>org.apache.lucene</groupId>
                <artifactId>lucene-core</artifactId>
                <version>${version.lucene}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.lucene</groupId>
                <artifactId>lucene-analyzers-common</artifactId>
                <version>${version.lucene}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.lucene</groupId>
                <artifactId>lucene-queries</artifactId>
                <version>${version.lucene}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.lucene</groupId>
                <artifactId>lucene-backward-codecs</artifactId>
                <version>${version.lucene}</version>
            </dependency>

            <!-- Guava -->
            <!-- Currently what we mainly use is the RangeSet containers -->
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${version.guava}</version>
            </dependency>

            <!-- Jetty Servlet Support -->
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-servlet</artifactId>
                <version>9.2.5.v20141112</version>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <!-- Common things that all modules need -->
    <dependencies>
        <!-- Mandatory dependencies for using Spock -->
        <dependency>
            <groupId>org.spockframework</groupId>
            <artifactId>spock-core</artifactId>
        </dependency>

        <!-- Optional dependencies for using Spock -->
        <dependency> <!-- enables mocking of classes (in addition to interfaces) -->
            <groupId>cglib</groupId>
            <artifactId>cglib-nodep</artifactId>
        </dependency>
        <dependency> <!-- enables mocking of classes without default constructor (together with CGLIB) -->
            <groupId>org.objenesis</groupId>
            <artifactId>objenesis</artifactId>
        </dependency>
        <dependency> <!-- only necessary if Hamcrest matchers are used -->
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
        </dependency>

        <!-- Validation -->
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
        </dependency>

        <!-- Logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>

        <!-- Groovy -->
        <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy-all</artifactId>
            <version>${version.groovy}</version>
        </dependency>
    </dependencies>

    <build>
        <extensions>
            <extension>
                <groupId>org.apache.maven.wagon</groupId>
                <artifactId>wagon-ssh-external</artifactId>
                <version>1.0-beta-6</version>
            </extension>
        </extensions>
        <finalName>${project.artifactId}-${project.version}</finalName>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${maven-source-plugin-version}</version>
                    <executions>
                        <execution>
                            <id>attach-sources</id>
                            <goals>
                                <goal>jar-no-fork</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-checkstyle-plugin</artifactId>
                    <dependencies>
                        <!-- override default checkstyle version -->
                        <dependency>
                            <groupId>com.puppycrawl.tools</groupId>
                            <artifactId>checkstyle</artifactId>
                            <version>${checkstyle.version}</version>
                        </dependency>
                    </dependencies>
                    <executions>
                        <execution>
                            <id>validate</id>
                            <phase>validate</phase>
                            <configuration>
                                <suppressionsLocation>${checkstyle.suppressions.location}</suppressionsLocation>
                                <suppressionsFileExpression>checkstyle.suppressions.file</suppressionsFileExpression>
                            </configuration>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                    </executions>
                    <version>${maven-checkstyle-plugin-version}</version>
                    <configuration>
                        <configLocation>${checkstyle.config.location}</configLocation>
                        <includes>**\/*.java</includes>
                        <resourceIncludes>**/*.properties,**/*.sample</resourceIncludes>
                        <includeTestSourceDirectory>true</includeTestSourceDirectory>
                        <consoleOutput>true</consoleOutput>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <configuration>
                        <failOnMissingWebXml>false</failOnMissingWebXml>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-site-plugin</artifactId>
                    <groupId>org.apache.maven.plugins</groupId>
                    <version>${maven-site-plugin-version}</version>
                    <configuration>
                        <skipDeploy>true</skipDeploy>
                        <topSiteURL>scm:git:git@github.com:yahoo/fili.git</topSiteURL>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>buildnumber-maven-plugin</artifactId>
                    <version>1.4</version>
                    <executions>
                        <execution>
                            <phase>validate</phase>
                            <goals>
                                <goal>create</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>${maven-javadoc-plugin-version}</version>
                    <executions>
                        <execution>
                            <id>attach-javadocs</id>
                            <goals>
                                <goal>javadoc-no-fork</goal>
                                <goal>jar</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <!-- Mandatory plugins for using Spock -->
                <plugin>
                    <groupId>org.codehaus.gmavenplus</groupId>
                    <artifactId>gmavenplus-plugin</artifactId>
                    <version>${version.gmavenplus.plugin}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>addSources</goal>
                                <goal>addTestSources</goal>
                                <goal>compile</goal>
                                <goal>compileTests</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.16</version>
                    <configuration>
                        <forkCount>1</forkCount>
                        <reuseForks>true</reuseForks>
                        <argLine>-Xmx3G</argLine>
                        <redirectTestOutputToFile>true</redirectTestOutputToFile>
                        <includes>
                            <include>%regex[.*Spec.*]</include>
                        </includes>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>cobertura-maven-plugin</artifactId>
                    <version>2.7</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven-jar-plugin-version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin-version}</version>
                    <configuration>
                        <source>${source_jdk_version}</source>
                        <target>${target_jdk_version}</target>
                        <showDeprecation>true</showDeprecation>
                        <showWarnings>true</showWarnings>
                        <optimize>true</optimize>
                        <encoding>${project.build.sourceEncoding}</encoding>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>1.8</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>1.4.1</version>
                <executions>
                    <execution>
                        <id>enforce-maven-version</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <version>[${min_maven_version},)</version>
                                </requireMavenVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cobertura-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>2.5.3</version>
                <configuration>
                    <goals>install</goals>
                    <useReleaseProfile>false</useReleaseProfile>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>buildnumber-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
            </plugin>

            <!-- Mandatory plugins for using Spock -->
            <plugin>
                <groupId>org.codehaus.gmavenplus</groupId>
                <artifactId>gmavenplus-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <reportsDirectory>${session.executionRootDirectory}/target/surefire-reports</reportsDirectory>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-site-descriptor</id>
                        <goals>
                            <goal>attach-descriptor</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>stage-for-scm-publish</id>
                        <phase>post-site</phase>
                        <goals>
                            <goal>stage</goal>
                        </goals>
                        <configuration>
                            <skipDeploy>false</skipDeploy>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>codenarc-maven-plugin</artifactId>
                <version>0.22-1</version>
                <configuration>
                    <sourceDirectory>${project.basedir}</sourceDirectory>
                    <maxPriority1Violations>0</maxPriority1Violations>
                    <maxPriority2Violations>0</maxPriority2Violations>
                    <maxPriority3Violations>0</maxPriority3Violations>
                </configuration>
                <executions>
                    <execution>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>codenarc</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <reporting>
        <plugins>
            <plugin>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>${maven-surefire-report-plugin.version}</version>
                <configuration>
                    <argLine>-Djava.library.path=${nativeDir}:${libDir} -XX:-UseLargePages
                        -XX:-UseLargePages
                        -Dlog4j.properties=file:src/test/resources/log4j.properties
                    </argLine>
                    <properties combine.self="override"/>
                </configuration>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>report-only</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
            <plugin>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>${maven-pmd-plugin-version}</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>pmd</report>
                            <report>cpd</report>
                        </reports>
                    </reportSet>
                </reportSets>
                <configuration>
                    <targetJdk>${target_jdk_version}</targetJdk>
                    <aggregate>true</aggregate>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>${maven-project-info-reports-plugin-version}</version>
                <configuration>
                    <dependencyLocationsEnabled>${dependency.locations.enabled}</dependencyLocationsEnabled>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${maven-checkstyle-plugin-version}</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>checkstyle-aggregate</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
            <plugin>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${maven-javadoc-plugin-version}</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>javadoc-no-fork</report>
                            <report>test-javadoc-no-fork</report>
                        </reports>
                        <configuration>
                            <aggregate>true</aggregate>
                            <quiet>true</quiet>
                            <excludePackageNames>${javadocs.package.exclude}</excludePackageNames>
                            <additionalJOptions>
                                <additionalJOption>-XDiag</additionalJOption>
                                <!-- SR 3-7600023701 -->
                                <additionalJOption>-J-XX:-UseG1GC</additionalJOption>
                                <additionalJOption>-J-Xms20m</additionalJOption>
                                <additionalJOption>-J-XX:-UseLargePages</additionalJOption>
                                <additionalJOption>${javadoc_options}</additionalJOption>
                            </additionalJOptions>
                            <!-- lint breaks JDK8 builds, disable -->
                            <additionalparam>${disableDocLint}</additionalparam>
                        </configuration>
                    </reportSet>
                </reportSets>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <version>3.0.3</version>
            </plugin>
        </plugins>
    </reporting>
</project>
