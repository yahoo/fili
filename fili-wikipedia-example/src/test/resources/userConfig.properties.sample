# Don't delete, use for testing!
bard__sample_default_config = default-config

# Use memory by default in the tests locally
bard__dimension_backend = memory

# Data Cache strategy, whose value is one of the following
# 1. ETag
#    This is the same thing as LocalSignature except that Etag optimizes to avoid the possibility of cache out-of-sync
#    problem. ETag relies on Druid to generate the signature(hash) instead of Fili
# 2. LocalSignature (cache V2, deprecated)
#    Maintains a mapping of (query, druidSegmentHash) -> DruidResponse. When a query comes in, Fili finds and computes
#    hash of all segments involved in that query. The query itself and the segment hash are combined together as the
#    cache key. If it's a new query or Druid reprocessed so that the segments change, there won't be a cache key in the
#    mapping and Fili talks to Druid to get new result. There is a possibility of cache out-of-sync problem when Druid
#    reprocesses and the segment scanner updates
# 3. Ttl (cache V1, deprecated)
#    "Ttl" stands for "Time to live". This strategy does NOT account for reprocessing. If you run a query, a cache is
#    generated with a TTL period. Until the cache entry expires(TTL > 0), same result will be sent back on the same
#    query; this is the case even when Druid has updated its data(result). Client using this cache strategy can
#    potentially receive stale results until the cache entry for that query expires.
# 4. NoCache
bard__query_response_caching_strategy = LocalSignature

bard__druid_coordinator_metadata_enabled = true

# Default the timeout to 10 minutes, in milliseconds
bard__druid_request_timeout = 600000
